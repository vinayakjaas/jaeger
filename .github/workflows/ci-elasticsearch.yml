name: CIT Elasticsearch

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ (github.event.pull_request && github.event.pull_request.number) || github.ref || github.run_id }}
  cancel-in-progress: true

# See https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions
permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  elasticsearch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
        - major: 7.x
          compose_file: docker-compose/elasticsearch/docker-compose-elasticsearch-v7.yml
          type: elasticsearch
        - major: 8.x
          compose_file: docker-compose/elasticsearch/docker-compose-elasticsearch-v7.yml
          type: elasticsearch
    name: Elasticsearch ${{ matrix.version.major }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

    - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      with:
        submodules: true

    - name: Fetch git tags
      run: |
        git fetch --prune --unshallow --tags

    - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        go-version: 1.22.x

    - name: Install tools
      run: make install-ci

    - uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
    
    - name: Start Elasticsearch
      run: docker-compose -f ${{ matrix.version.compose_file }} up -d

    - name: Wait for Elasticsearch to be ready
      run: |
        COUNTER=0
        MAX_COUNTER=60
        while [[ "$(curl -s -o /dev/null -w '%{http_code}' http://localhost:9200)" != "200" && ${COUNTER} -le ${MAX_COUNTER} ]]; do
          echo "Waiting for Elasticsearch to be ready..."
          sleep 10
          COUNTER=$((COUNTER+1))
        done
        if [[ ${COUNTER} -gt ${MAX_COUNTER} ]]; then
          echo "Elasticsearch did not become ready in time"
          exit 1
        fi

    - name: Run elasticsearch integration tests
      id: test-execution
      run: bash scripts/es-integration-test.sh ${{ matrix.version.distribution }} ${{ matrix.version.compose_file }}

    - name: Output Elasticsearch logs
      run: docker-compose -f ${{ matrix.version.compose_file }} logs
      if: ${{ failure() }}

    - name: Upload coverage to codecov
      uses: ./.github/actions/upload-codecov
      with:
        files: cover.out,cover-index-cleaner.out,cover-index-rollover.out
        flags: elasticsearch-${{ matrix.version.major }}
